<?xml version="1.0" encoding="UTF-8" ?><flamingodoc><title>Flamingo Component Reference</title><generated>Wed Dec 27 04:27:43 GMT+0100 2006</generated><component><name>LayerOGWMS</name><see>Map</see><file>OGWMSConnector.as (sourcefile)</file><file>LayerOGWMS.fla (sourcefile)</file><file>LayerOGWMS.swf (compiled layer, needed for publication on internet)</file><file>LayerOGWMS.xml (configurationfile for layer, needed for publication on internet)</file><description>Open Gis WMS layer.</description><configtags><configtag name="&lt;fmc:LayerOGWMS&gt;"><name>&lt;fmc:LayerOGWMS&gt;</name><attribute name="timeout"><name>timeout</name><description>(defaultvalue &quot;10&quot;) Time in seconds when the layer will dispatch an onErrorUpdate event.</description></attribute><attribute name="retryonerror"><name>retryonerror</name><description>(defaultvalue &quot;0&quot;) Number of retrys when encountering an error.</description></attribute><attribute name="minscale"><name>minscale</name><description>If mapscale exceeds minscale, the layer will not be shown.</description></attribute><attribute name="maxscale"><name>maxscale</name><description>If mapscale exceeds maxscale, the layer will not be shown.</description></attribute><attribute name="layers"><name>layers</name><description>A comma seperated list of layers that the map contain.</description></attribute><attribute name="query_layers"><name>query_layers</name><description>A comma seperated list of layers that will be identified.</description></attribute><attribute name="transparent"><name>transparent</name><description>(defaultvalue &quot;true&quot;) true or false</description></attribute><attribute name="format"><name>format</name><description>(defaultvalue &quot;image/png&quot;) Format of returned image.</description></attribute><attribute name="info_format"><name>info_format</name><description>(defaultvalue &quot;application/vnd.ogc.gml&quot;) Format of identify information.</description></attribute><attribute name="feature_count"><name>feature_count</name><description>Number of features that will be returned after an identify.</description></attribute><attribute name="getfeatureinfourl"><name>getfeatureinfourl</name><description>This setting is used when the getFeatureinfo request requires a different url as the getMap request. When omitted the 'url' is used</description></attribute><attribute name="url"><name>url</name><description>Url of the mapserver, without! these arguments: BBOX, TRANSPARENT, FORMAT, INFO_FORMAT, LAYERS, QUERY_LAYERS, WIDTH, HEIGTH, FEATURE_COUNT, X and Y</description></attribute><attribute name="visible"><name>visible</name><description>(defaultvalue &quot;true&quot;) true or false</description></attribute><hierarchy>childnode of &lt;fmc:Map&gt;</hierarchy><description>This tag defines a Open Gis WMS layer.</description></configtag></configtags><properties><property name="feature_count"><name>feature_count</name><description>Number of features that can return after an identify.</description><type>Number</type><usage>var feature_count:Number = 10</usage></property><property name="format"><name>format</name><description>Format of returned mapimage</description><type>String</type><usage>var format:String = "image/png"</usage></property><property name="fullextent"><name>fullextent</name><description>Extent of the layer.</description><type>Object</type><usage>var fullextent:Object</usage></property><property name="getfeatureinfourl"><name>getfeatureinfourl</name><description>The url of the getFeatureinfo, if different then the url of the getMap request.</description><type>String</type><usage>var getfeatureinfourl:String</usage></property><property name="info_format"><name>info_format</name><description>Format of identify information.</description><type>String</type><usage>var info_format:String = "application/vnd.ogc.gml"</usage></property><property name="layers"><name>layers</name><description>Object containing layer-objects per id. A layer object has the properties: visible, identify and order</description><type>Object</type><usage>var layers:Object = new Object()</usage></property><property name="maxscale"><name>maxscale</name><description>Maximum scale of the map</description><type>Number</type><usage>var maxscale:Number</usage></property><property name="minscale"><name>minscale</name><description>Minimum scale of the layer.</description><type>Number</type><usage>var minscale:Number</usage></property><property name="query_layers"><name>query_layers</name><description>Comma seperated list of layerids that wil be identified in this order. If a layer is actually identified, depends on the visible and identify properties in the layers object!</description><type>String</type><usage>var query_layers:String</usage></property><property name="retryonerror"><name>retryonerror</name><description>number of retry's when an error occur</description><type>Number</type><usage>var retryonerror:Number = 0</usage></property><property name="timeout"><name>timeout</name><description>Time in seconds when the layer dispatches an error event.</description><type>Number</type><usage>var timeout:Number = 10</usage></property><property name="transparent"><name>transparent</name><description>Determines if a map is transparent.</description><type>Boolean</type><usage>var transparent:Boolean = true</usage></property><property name="updating"><name>updating</name><description>[read only] Is true when a layer is performing an update sequence.</description><type>Boolean</type><usage>var updating:Boolean = false</usage></property><property name="url"><name>url</name><description>The url of the getMap request of the WMS.</description><type>String</type><usage>var url:String</usage></property><property name="visible"><name>visible</name><description>[read only] Determines if a layer is visible. To change the visibility of a layer use the methods hide and show</description><type>Boolean</type><usage>var visible:Boolean</usage></property></properties><methods><method name="hide"><name>hide</name><parameter name="map"><name>map</name><type>MovieClip</type><description>[optional]</description></parameter><description>Hides a layer.</description><returntype>function hide() </returntype><arguments>() </arguments><usage>function hide() </usage></method><method name="identify"><name>identify</name><parameter name="identifyextent"><name>identifyextent</name><type>Object</type><description>extent of the identify</description></parameter><parameter name="map"><name>map</name><type>MovieClip</type><description>[optional]</description></parameter><description>Identifies a layer.</description><returntype>Object) </returntype><arguments>(identifyextent:Object) </arguments><usage>function identify(identifyextent:Object) </usage></method><method name="show"><name>show</name><parameter name="map"><name>map</name><type>MovieClip</type><description>[optional]</description></parameter><description>Shows a layer.</description><returntype>function show() </returntype><arguments>() </arguments><usage>function show() </usage></method><method name="update"><name>update</name><parameter name="map"><name>map</name><type>MovieClip</type><description>[optional]</description></parameter><parameter name="nrtry"><name>nrtry</name><type>Number</type><description>[optional]</description></parameter><description>Updates a layer.</description><returntype>Number) </returntype><arguments>( nrtry:Number) </arguments><usage>function update( nrtry:Number) </usage></method></methods><events><event name="onGetLegend"><name>onGetLegend</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="legendurl"><name>legendurl</name><type>String</type><description>the url of the legend.</description></parameter><description>Dispatched when a legend is returned during an update sequence.</description><returntype>Void </returntype><arguments>(layer:MovieClip, legendurl:String):Void </arguments><usage>public function onGetLegend(layer:MovieClip, legendurl:String):Void </usage></event><event name="onHide"><name>onHide</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><description>Dispatched when the layer is hidden.</description><returntype>Void </returntype><arguments>(layer:MovieClip):Void </arguments><usage>public function onHide(layer:MovieClip):Void </usage></event><event name="onIdentify"><name>onIdentify</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="identifyextent"><name>identifyextent</name><type>Object</type><description>the extent that is identified</description></parameter><description>Dispatched when the layer is identified.</description><returntype>Void </returntype><arguments>(layer:MovieClip, identifyextent:Object):Void </arguments><usage>public function onIdentify(layer:MovieClip, identifyextent:Object):Void </usage></event><event name="onIdentifyComplete"><name>onIdentifyComplete</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="identifytime"><name>identifytime</name><type>Number</type><description>total time of the identify</description></parameter><description>Dispatched when the identify is completed.</description><returntype>Void </returntype><arguments>(layer:MovieClip, identifytime:Number):Void </arguments><usage>public function onIdentifyComplete(layer:MovieClip, identifytime:Number):Void </usage></event><event name="onIdentifyData"><name>onIdentifyData</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="data"><name>data</name><type>Object</type><description>data object with the information</description></parameter><parameter name="identifyextent"><name>identifyextent</name><type>Object</type><description>the original extent that is identified</description></parameter><description>Dispatched when the layer is identified and data is returned</description><returntype>Void </returntype><arguments>(layer:MovieClip, data:Object, identifyextent:Object):Void </arguments><usage>public function onIdentifyData(layer:MovieClip, data:Object, identifyextent:Object):Void </usage></event><event name="onIdentifyError"><name>onIdentifyError</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="error"><name>error</name><type>String</type><description>error message</description></parameter><description>Dispatched when the layer is identified and an error occurs.</description><returntype>Void </returntype><arguments>(layer:MovieClip, error:String):Void </arguments><usage>public function onIdentifyError(layer:MovieClip, error:String):Void </usage></event><event name="onIdentifyRequest"><name>onIdentifyRequest</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="requestobject"><name>requestobject</name><type>Object</type><description>the object returned from the ArcIMSConnector, containing the raw requests.</description></parameter><description>Dispatched when the layer is identified.</description><returntype>Void </returntype><arguments>(layer:MovieClip, requestobject:Object):Void </arguments><usage>public function onIdentifyRequest(layer:MovieClip, requestobject:Object):Void </usage></event><event name="onIdentifyResponse"><name>onIdentifyResponse</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="responseobject"><name>responseobject</name><type>Object</type><description>the object returned from the ArcIMSConnector, containing the raw response.</description></parameter><description>Dispatched when the layer is identified.</description><returntype>Void </returntype><arguments>(layer:MovieClip, responseobject:Object):Void </arguments><usage>public function onIdentifyResponse(layer:MovieClip, responseobject:Object):Void </usage></event><event name="onInit"><name>onInit</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><description>Dispatched when a the layer is up and running and ready to update for the first time.</description><returntype>Void </returntype><arguments>(layer:MovieClip):Void </arguments><usage>public function onInit(layer:MovieClip):Void </usage></event><event name="onShow"><name>onShow</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><description>Dispatched when the layer is shown.</description><returntype>Void </returntype><arguments>(layer:MovieClip):Void </arguments><usage>public function onShow(layer:MovieClip):Void </usage></event><event name="onUpdate"><name>onUpdate</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="nrtry"><name>nrtry</name><type>Number</type><description>number of retry after an error.</description></parameter><description>Dispatched when the starts an update sequence.</description><returntype>Void </returntype><arguments>(layer:MovieClip, nrtry):Void </arguments><usage>public function onUpdate(layer:MovieClip, nrtry):Void </usage></event><event name="onUpdateComplete"><name>onUpdateComplete</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="updatetime"><name>updatetime</name><type>Object</type><description>total time of the update sequence</description></parameter><description>Dispatched when the layer is completely updated.</description><returntype>Void </returntype><arguments>(layer:MovieClip, updatetime:Number):Void </arguments><usage>public function onUpdateComplete(layer:MovieClip, updatetime:Number):Void </usage></event><event name="onUpdateError"><name>onUpdateError</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="error"><name>error</name><type>String</type><description>error message</description></parameter><description>Dispatched when the layer is updated and an error occurs.</description><returntype>Void </returntype><arguments>(layer:MovieClip, error:String):Void </arguments><usage>public function onUpdateError(layer:MovieClip, error:String):Void </usage></event><event name="onUpdateProgress"><name>onUpdateProgress</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="bytesloaded"><name>bytesloaded</name><type>Number</type><description>Number of bytes already downloaded.</description></parameter><parameter name="bytestotal"><name>bytestotal</name><type>Number</type><description>Total of bytes to be downloaded.</description></parameter><description>Dispatched when the layerimage is downloaded.</description><returntype>Void </returntype><arguments>(layer:MovieClip, bytesloaded:Number, bytestotal:Number):Void </arguments><usage>public function onUpdateProgress(layer:MovieClip, bytesloaded:Number, bytestotal:Number):Void </usage></event><event name="onUpdateRequest"><name>onUpdateRequest</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="requestobject"><name>requestobject</name><type>Object</type><description>the object returned from the ArcIMSConnector, containing the raw requests.</description></parameter><description>Dispatched when the layer is updated.</description><returntype>Void </returntype><arguments>(layer:MovieClip, requestobject:Object):Void </arguments><usage>public function onUpdateRequest(layer:MovieClip, requestobject:Object):Void </usage></event><event name="onUpdateResponse"><name>onUpdateResponse</name><parameter name="layer"><name>layer</name><type>MovieClip</type><description>a reference to the layer.</description></parameter><parameter name="requestobject"><name>requestobject</name><type>Object</type><description>the object returned from the ArcIMSConnector, containing the raw response.</description></parameter><description>Dispatched when the layer is updated.</description><returntype>Void </returntype><arguments>(layer:MovieClip, responsobject:Object):Void </arguments><usage>public function onUpdateResponse(layer:MovieClip, responsobject:Object):Void </usage></event></events></component></flamingodoc>